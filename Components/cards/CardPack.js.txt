import React, { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Sparkles, Package, Star, Coins } from 'lucide-react';

const PACK_TYPES = {
  basic: {
    name: 'Basic Pack',
    cost: 50,
    cards: 3,
    rareChance: 15,
    epicChance: 3,
    legendaryChance: 0.5,
    color: 'from-gray-500 to-gray-700'
  },
  premium: {
    name: 'Premium Pack',
    cost: 150,
    cards: 5,
    rareChance: 35,
    epicChance: 12,
    legendaryChance: 2,
    color: 'from-blue-500 to-purple-600'
  },
  legendary: {
    name: 'Legendary Pack',
    cost: 500,
    cards: 10,
    rareChance: 60,
    epicChance: 30,
    legendaryChance: 8,
    color: 'from-yellow-400 to-orange-500'
  }
};

export default function CardPack({ packType, onOpen, userCoins, isOpening = false }) {
  const [isHovered, setIsHovered] = useState(false);
  const pack = PACK_TYPES[packType];
  const canAfford = userCoins >= pack.cost;

  return (
    <motion.div
      whileHover={{ scale: canAfford ? 1.02 : 1 }}
      whileTap={{ scale: canAfford ? 0.98 : 1 }}
      onHoverStart={() => setIsHovered(true)}
      onHoverEnd={() => setIsHovered(false)}
      className="h-full"
    >
      <Card className={`h-full relative overflow-hidden border-2 transition-all duration-300 ${
        canAfford 
          ? 'border-yellow-500/50 hover:border-yellow-400 hover:shadow-xl hover:shadow-yellow-500/20' 
          : 'border-gray-400/30 opacity-75'
      }`}>
        <div className={`absolute inset-0 bg-gradient-to-br ${pack.color} opacity-10`} />
        
        {canAfford && isHovered && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            className="absolute inset-0 bg-gradient-to-br from-yellow-400/10 to-orange-500/10"
          />
        )}
        
        <CardContent className="p-6 relative z-10 h-full flex flex-col justify-between">
          <div className="text-center space-y-4">
            <div className="relative mx-auto w-20 h-20">
              <motion.div
                animate={canAfford && isHovered ? { rotate: 360 } : {}}
                transition={{ duration: 2, repeat: Infinity, ease: "linear" }}
                className="w-full h-full"
              >
                <Package className={`w-20 h-20 transition-all duration-300 ${
                  canAfford 
                    ? isHovered ? 'text-yellow-500 drop-shadow-lg' : 'text-gray-600' 
                    : 'text-gray-500'
                }`} />
              </motion.div>
              
              {canAfford && isHovered && (
                <motion.div
                  initial={{ scale: 0, opacity: 0 }}
                  animate={{ scale: 1, opacity: 1 }}
                  className="absolute -top-2 -right-2"
                >
                  <Sparkles className="w-8 h-8 text-yellow-400 drop-shadow-lg" />
                </motion.div>
              )}
            </div>
            
            <div>
              <h3 className="text-xl font-bold text-white mb-1">{pack.name}</h3>
              <p className="text-gray-300">{pack.cards} player cards</p>
            </div>
            
            <div className="space-y-2">
              <div className="flex flex-wrap gap-1 justify-center">
                <Badge variant="outline" className="bg-blue-50/10 text-blue-300 border-blue-400/30 text-xs">
                  {pack.rareChance}% Rare+
                </Badge>
                <Badge variant="outline" className="bg-purple-50/10 text-purple-300 border-purple-400/30 text-xs">
                  {pack.epicChance}% Epic+
                </Badge>
                <Badge variant="outline" className="bg-yellow-50/10 text-yellow-300 border-yellow-400/30 text-xs">
                  {pack.legendaryChance}% Legendary
                </Badge>
              </div>
            </div>
            
            <div className="flex items-center justify-center gap-2 py-2">
              <Coins className="w-6 h-6 text-yellow-500" />
              <span className="text-2xl font-bold text-white">{pack.cost}</span>
              <span className="text-gray-300">coins</span>
            </div>
          </div>
          
          <Button
            onClick={() => onOpen(packType)}
            disabled={!canAfford || isOpening}
            className={`w-full mt-4 font-bold ${
              canAfford 
                ? `bg-gradient-to-r ${pack.color} hover:shadow-lg transition-all duration-300 text-white` 
                : 'bg-gray-600 text-gray-300 cursor-not-allowed'
            }`}
          >
            {isOpening ? (
              <>
                <motion.div
                  animate={{ rotate: 360 }}
